specVersion: 0.0.2
description: ConfigAddress for Ethereum
repository: https://github.com/fatter-bo/hardcatstudy
# 研发期报错先不挺
features:
  - nonFatalErrors
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ConfigAddress
    network: mainnet #replace mainnet
    source:
      address: "0x1f94C1E0dd1b3bB0f9e24df0727c41002c1b051f" #{{CONFIGADDRESS_ADDRESS}}
      abi: ConfigAddress
      startBlock: 0 #{{STARTBLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - ConfigAddress
      abis:
        - name: ConfigAddress
          file: ./abis/ConfigAddress.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
      eventHandlers:
        - event: UpsertConfig(indexed address,indexed uint256,address,address,address,string,string,string,address,address)
          handler: handleUpsertConfig
        - event: UpsertGameToken(indexed address,indexed address,string)
          handler: handleUpsertGameToken
      #callHandlers:
      #- function: createGravatar(string,string)
      #  handler: handleCreateGravatar
      #blockHandlers:
      #  - handler: handleBlock
      #- handler: handleBlockWithCallToContract
      #  filter:
      #    kind: call
      file: ./src/mapping.ts

  # GameFactory合约
  - kind: ethereum/contract
    name: GameFactory
    network: mainnet #replace mainnet
    source:
      address: "0xC17F8852B289e4E0A4122E61D1A8f7D90D205455" #{{GAMEFACTORY_ADDRESS}}
      abi: GameFactory
      startBlock: 0 #{{STARTBLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Games
      abis:
        - name: GameFactory
          file: ./abis/GameFactory.json
        - name: Game
          file: ./abis/Game.json
        - name: LGame
          file: ./abis/LGame.json
      eventHandlers:
        # 创建游戏事件
        - event: _GameCreated(indexed address,indexed address,indexed address,string,string[],uint256[],string,uint256)
          handler: handleEventCreateGame
        # 下单事件
        #- event: EventBetForToken(indexed address,indexed address,indexed address,uint256,uint256,uint256)
        #  handler: handleEventBetForToken
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: VoteInfo
    network: mainnet #replace mainnet
    source:
      address: "0x391BA6aa61AC098F3D62709bf6022404c1A9BfF5" #{{VOTE_ADDRESS}}
      abi: Vote
      startBlock: 0 #{{STARTBLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mapping.ts
      entities:
        - VoteInfo
      abis:
        - name: Vote
          file: ./abis/Vote.json
      eventHandlers:
        - event: _startVote(indexed address,indexed address,uint8,uint8,uint256)
          handler: handStartVote
        - event: _addVote(indexed address,indexed address,uint8,uint256,uint256)
          handler: handAddVote

templates:
  - kind: ethereum/contract
    name: Game
    network: mainnet #replace mainnet
    source:
      abi: Game
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mapping.ts
      entities:
        - Game
      abis:
        - name: Game
          file: ./abis/Game.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: _placeGame(indexed address,indexed address,indexed address,uint8[],uint256[],uint256[],uint256[])
          handler: handPlaceGame
        - event: _addLiquidity(indexed address,indexed address,indexed address,uint256,uint256,uint256[],uint256[])
          handler: handAddLiquidity
        - event: _removeLiquidity(indexed address,indexed address,uint256,uint256,uint256[],uint256[])
          handler: handRemoveLiquidity
        - event: _stakeGame(indexed address,indexed address,indexed address,uint256)
          handler: handStakeGame
        - event: _openGame(indexed address,indexed address,uint256)
          handler: handOpenGame
        - event: _challengeGame(indexed address,indexed address,uint256,uint256,address)
          handler: handChallengeGame
        - event: _getAward(indexed address,indexed address,indexed address,uint256[],uint256)
          handler: handGetAward
