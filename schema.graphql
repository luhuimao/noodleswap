type ERC20Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  name: String!
  decimals: BigInt!

  # 发行量
  totalSupply: BigInt
}
# 客户端配置文件读取
type ConfigAddress @entity {
  # factory address
  id: ID!

  # 工厂合约地址
  factoryAddress: Bytes!

  # 保证金合约地址
  ndlToken: ERC20Token!

  # WETH合约地址
  wethToken: ERC20Token!

  # USDT合约地址
  usdtToken: ERC20Token!

  # 区块浏览器地址
  rpcUrl: String!

  # 区块浏览器地址
  blockUrl: String!

  # 网络名称
  networkName: String!

  # chain_id
  chainId: BigInt!

  # 时间戳
  timestamp: BigInt!

  # 其他用来游戏的代币也可以随时配置添加
  gameTokens: [ERC20Token!]!
}

# 用户信息
type UserInfo @entity {
  id: ID!
}

# 游戏列表
type Game @entity {
  id: ID!

  title: String! # 标题
  locked: BigInt! # 是否解锁状态
}

# 游戏列表
type GameInfo @entity {
  id: ID!

  _token: ERC20Token! # 游戏代币币种
  _owner: Bytes! # 用户地址
  _game: Game! # 游戏合约地址
  _gameName: String! # 标题
  _optionName: [String!]! # 选项名称
  _optionNum: [BigInt!]! # 选项数据
  _resultSource: String! # 结果网址
  _endSec: BigInt! # 游戏结束时间戳，也就是结束时间到了才可输入结果
  _openAddress: Bytes # 开奖者地址
  _winOption: BigInt # 获胜选项
  timestamp: BigInt! #  下注时间
  vote: VoteInfo! @derivedFrom(field: "game") # 投票地址
  betInfos: [BetInfo!]! @derivedFrom(field: "game") # 下注记录
  nftInfos: [NFTInfo!]! @derivedFrom(field: "game") # 下注记录
}

# nft列表
type NFTInfo @entity {
  id: ID!

  tokenId: BigInt! # token地址
  owner: Bytes! # 用户地址
  game: GameInfo! # 所属游戏
}

# 下注记录
type BetInfo @entity {
  id: ID!

  sender: Bytes! # 用户地址
  token: Bytes! # 代币合约地址
  game: GameInfo! # 所属游戏
  options: [Int!]! # 选项数据
  optionNum: [BigInt!]! # 选项数据
  tokenIds: [BigInt!]! # 选项数据
  timestamp: BigInt! #  下注时间
}

# 投票信息
type VoteInfo @entity {
  id: ID! #game地址作为key
  vote: Bytes! # 投票合约地址
  owner: Bytes! # 发起者地址
  game: GameInfo! # 所属游戏
  winOption: BigInt! # 同意选项
  option: BigInt! # 同意选项
  timestamp: BigInt! #  下注时间
  voteUserInfos: [VoteUserInfo!]! @derivedFrom(field: "vote") # 下注记录
}

# 投票明细
type VoteUserInfo @entity {
  id: ID!

  sender: Bytes! # 投票者地址
  vote: VoteInfo! # 所属游戏
  option: Int! # 投票选项
  timestamp: BigInt! #  下注时间
}

type Token @entity {
  id: ID!
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "token")
}

type TokenBalance @entity {
  id: ID!
  amount: Int!
  token: Token!
}
